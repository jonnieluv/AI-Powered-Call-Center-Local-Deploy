version: '3.8'

services:
  # PostgreSQL - Primary Database
  postgres:
    image: postgres:15-alpine
    container_name: crm_postgres
    environment:
      POSTGRES_DB: ultimate_crm
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - crm_network

  # Redis - Cache and Session Store
  redis:
    image: redis:7-alpine
    container_name: crm_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crm_network

  # Neo4j - Graph Database
  neo4j:
    image: neo4j:5.13-community
    container_name: crm_neo4j
    environment:
      NEO4J_AUTH: neo4j/crm_password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - crm_network

  # Kafka - Message Queue
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: crm_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - crm_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: crm_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - crm_network

  # Elasticsearch - Search and Analytics
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: crm_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - crm_network

  # MinIO - Object Storage
  minio:
    image: minio/minio:latest
    container_name: crm_minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: crm_admin
      MINIO_ROOT_PASSWORD: crm_password
    volumes:
      - minio_data:/data
    networks:
      - crm_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crm_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://crm_user:crm_password@postgres:5432/ultimate_crm
      - REDIS_URL=redis://redis:6379
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=crm_password
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=crm_admin
      - MINIO_SECRET_KEY=crm_password
    depends_on:
      - postgres
      - redis
      - neo4j
      - kafka
      - elasticsearch
      - minio
    volumes:
      - ./backend:/app
    networks:
      - crm_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crm_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - crm_network
    command: npm run dev

  # ML Model Server
  ml_server:
    build:
      context: ./ml-models
      dockerfile: Dockerfile
    container_name: crm_ml_server
    ports:
      - "8001:8001"
    environment:
      - MODEL_PATH=/models
    volumes:
      - ./ml-models:/app
      - ml_models_data:/models
    networks:
      - crm_network

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  neo4j_logs:
  elasticsearch_data:
  minio_data:
  ml_models_data:

networks:
  crm_network:
    driver: bridge